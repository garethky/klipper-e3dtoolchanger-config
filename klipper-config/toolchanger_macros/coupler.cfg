# The coupler stepper is configured so the position can be thought of in rotational degrees.

[gcode_macro COUPLER_G28]
variable_speed:        200  # top speed for coupler moves in degrees/s
variable_accel:        500  # acceleration in degrees/s^2
gcode:
    # initalize the coupler state to unlocked (which it should be after homing)
    MANUAL_STEPPER STEPPER=stepper_coupler ENABLE=1
    MANUAL_STEPPER STEPPER=stepper_coupler SET_POSITION=360
    MANUAL_STEPPER STEPPER=stepper_coupler SPEED={speed} ACCEL={accel} MOVE=0 STOP_ON_ENDSTOP=1
    MANUAL_STEPPER STEPPER=stepper_coupler SET_POSITION=20
    # backup and home again
    MANUAL_STEPPER STEPPER=stepper_coupler SPEED={speed} ACCEL={accel} MOVE=60
    MANUAL_STEPPER STEPPER=stepper_coupler SPEED={speed} ACCEL={accel} MOVE=0 STOP_ON_ENDSTOP=1
    MANUAL_STEPPER STEPPER=stepper_coupler SET_POSITION=20
    QUERY_ENDSTOPS  # update Klippers internal endstop state
    COUPLER_ASSERT_UNLOCKED

# Move Coupler to Unlock Position, stopping when endstop is triggered
[gcode_macro COUPLER_UNLOCK]
variable_speed:        200  # top speed for coupler moves in degrees/s
variable_accel:        500  # acceleration in degrees/s^2
gcode:
    MANUAL_STEPPER STEPPER=stepper_coupler SPEED={speed} ACCEL={accel} MOVE=0 STOP_ON_ENDSTOP=1
    MANUAL_STEPPER STEPPER=stepper_coupler SET_POSITION=20
    QUERY_ENDSTOPS  # update Klippers internal endstop state
    COUPLER_ASSERT_UNLOCKED

# Move Coupler to Lock Position
[gcode_macro COUPLER_LOCK]
variable_speed:        200  # top speed for coupler moves in degrees/s
variable_accel:        500  # acceleration in degrees/s^2
variable_lock_angle:   98   # degrees of rotation from unlocked to locked position
gcode:
    MANUAL_STEPPER STEPPER=stepper_coupler SPEED={speed} ACCEL={accel} MOVE={20 + lock_angle}
    M400
    QUERY_ENDSTOPS
    COUPLER_ASSERT_LOCKED

[gcode_macro COUPLER_ASSERT_LOCKED]
gcode:
    {% if not printer["filament_switch_sensor coupler_lock_trigger"].filament_detected %}
        {action_raise_error("Coupler failed to lock")}
        # TODO: we probably want to freeze the machine here. We may need different PAUSE macros
        # one for freezing in place and one for pausing a print.
        # PAUSE to allow investigation of the failed coupling attempt
        PAUSE
    {% endif %}

[gcode_macro COUPLER_ASSERT_UNLOCKED]
gcode:
    {% if not printer.query_endstops.last_query["manual_stepper stepper_coupler"] %}
        {action_raise_error("Coupler failed to unlock")}
        PAUSE
    {% endif %}